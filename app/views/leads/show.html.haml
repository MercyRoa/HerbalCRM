- content_for :head do
  - aloha!

.page-header
  %h1=@lead
  %div
    %span.badge= @lead.step
    = status_label @lead
    = time_ago @lead.last_contacted

.span6
  %p
    %strong #{t 'Campaign'}:
    = @lead.campaign.name
  %p
    %strong #{t 'Account'}:
    = @lead.account
  %p
    %strong #{t 'Email'}:
    = @lead.email
    = link_to t('Open in Gmail'), "https://mail.google.com/mail/?shva=1#search/#{@lead.email.sub('@', '%40')}/",
    target: '_blank'
  %p
    %strong #{t 'Messages Received'}:
    = @lead.messages_received_count
  %p
    %strong #{t 'Messages Sent'}:
    = @lead.messages_sent_count
  %p
    %strong #{t 'Raiting'}:
    = @lead.raiting
  %p
    %strong #{t 'Phone'}:
    = @lead.phone
%span6
  %p
    %strong #{t 'Location'}:
    = [@lead.country, @lead.city].join
  %p
    %strong #{t 'Address'}:
    = @lead.address
  %p
    %strong #{t 'Source'}:
    = @lead.source
  %p
    %strong #{t 'Automatic'}:
    = @lead.automatic
  %p
    %strong #{t 'Resume'}:
    = @lead.resume
  %p
    %strong #{t 'Bounce'}:
    = @lead.bounce
  %p
    %strong #{t 'Stage'}:
    = @lead.stage

.form-actions
  = link_to t('Back'), leads_path, :class => 'btn'
  = link_to t('Edit'), edit_lead_path(@lead), :class => 'btn'
  = link_to t('Delete'), lead_path(@lead), :method => "delete", :confirm => 'Are you sure?',
  :class => 'btn btn-danger'
  %div{style: 'float: right;'}
    = form_for(@lead, remote: true) do |f|
      = f.hidden_field :draft
      %b Assign to:
      = f.collection_select(:assigned_to, User.all, :id, :name, { :prompt => 'Please assign to a user'})
      %button{ type: "submit", class: "btn"} Assign

#reply

  %h2 Send Email
  = form_for @new_message do |f|
    = f.hidden_field :lead_id, value: @lead.id
    = f.hidden_field :account_id, value: @lead.account_id
    = f.hidden_field :to, value: @lead.email
    = f.hidden_field :account_id, value: @lead.account_id
    = f.hidden_field :user_id, value: current_user.id
    %b Schedule:
    = f.text_field :scheduled, value: Time.now
    %b Bcc:
    = f.text_field :bcc

    %div= f.text_field :subject, value: ("Re: #{@lead.messages.first.subject}" unless @lead.messages.empty?),
    class: 'span8'
    = f.text_area :body, value: @lead.draft ,size: '150x3', placeholder: 'Reply here',
        class: 'span8 editable-long-text'
    %div
      = f.submit 'Send', class: 'btn btn-success'
      = button_tag 'Save Draft', class: 'btn', id: 'savedraft'

  .navbar
    .navbar-inner
      %form.navbar-form
        // %input.span3{ id: 'search-models', type: :text, placeholder: 'Search...' }

        // this is very ugly, makes many queries to db
        = grouped_collection_select(:text_model, :title, TextModel.categories, :from_category, :category, :id,
        :title)
        // = collection_select(:text_model, nil, @text_models, :id, :title)
        // = select_tag :select_text_model, options_from_collection_for_select(@text_models, :id, :title)

        %button{ id: :insert_text_model, type: "submit", class: "btn"} Insert

  %h2 New Note
  = form_for @new_note do |f|
    %b Due Date:
    = f.hidden_field :lead_id, value: @lead.id
    = f.text_field :due_date
    = f.text_area :text, size: '150x3', class: 'span8 editable-short-text'
    = f.submit 'Add note', class: 'btn'

#scheduled_messages
  - @lead.scheduled_messages.each do |message|
    %div[message]{ :class => 'from_account'}
      %h3= message.subject
      -if message.sent?
        %span.label.label-warning Message sent
      -else
        %span.label.label-info Scheduled
        To send in:
        = (Time.now < message.scheduled) ? distance_of_time_in_words(Time.now, message.scheduled) : 'Next send'
      - unless message.user.blank?
        .by #{t 'Written by'}: #{message.user}
      - unless message.sent?
        = link_to "Edit", edit_scheduled_message_path(message)
        = link_to t('.destroy', :default => t("Delete")), scheduled_message_path(message), :method => :delete,
        :remote => true, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm",
        :default => 'Are you sure?')) }
      %pre= message.body
    %hr

#history
  - @history.each do |item|
    - if item.kind_of? Note
      %div[item]{ :class => "alert alert-block" }
        %i{:style => "float: right; display: block"}= "-- by #{item.creator.name}"
        = item.text.html_safe

    - if item.kind_of? Message
      - message = item
      %div[message]{ :class => ('from_account' if message.from_account?) }
        %h3= message.subject
        %em= time_ago message.date
        .from #{t 'From'}: #{message.from}
        - unless message.user.blank?
          .by #{t 'Written by'}: #{message.user}
        %pre= message.to_s.html_safe unless message.body.blank?
        = message.body_raw.html_safe if message.body.blank?
    %hr


:javascript
  $(".chzn-select").chosen();